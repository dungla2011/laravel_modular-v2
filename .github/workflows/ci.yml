name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017

    strategy:
      matrix:
        php-version: [8.2, 8.3]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo, dom, filter, gd, json, mongodb-1.21.0
        tools: composer:v2
        
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader
        
    - name: Wait for MongoDB
      run: |
        until php -r "try { \$m = new MongoDB\Driver\Manager('mongodb://localhost:27017'); \$m->executeCommand('admin', new MongoDB\Driver\Command(['ping' => 1])); echo 'MongoDB is ready'; } catch (Exception \$e) { echo 'Waiting for MongoDB...'; exit(1); }"; do
          echo "MongoDB not ready yet, waiting..."
          sleep 2
        done

    - name: Copy environment file
      run: cp .env.example .env
      
    - name: Generate application key
      run: php artisan key:generate
      
    - name: Setup test environment
      run: |
        echo "DB_CONNECTION=mongodb" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=27017" >> .env
        echo "DB_DATABASE=laravel_test" >> .env
        echo "APP_ENV=testing" >> .env
        echo "SESSION_DRIVER=file" >> .env
        echo "CACHE_STORE=file" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env

    - name: Run PHPUnit Tests
      run: php artisan test --parallel
